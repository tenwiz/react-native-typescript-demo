{"version":3,"sources":["views/components/loading-indicator/LoadingIndicator.module.scss","views/components/loading-indicator/LoadingIndicator.jsx","views/components/toasts/Toasts.module.scss","utilities/ActionUtility.js","stores/requesting/RequestingReducer.js","stores/error/ErrorAction.js","stores/error/ErrorReducer.js","utilities/BaseReducer.js","stores/shows/ShowsReducer.js","stores/toasts/ToastsAction.js","stores/toasts/ToastsReducer.js","constants/ToastStatusEnum.ts","constants/RouteEnum.ts","middlewares/errorToastMiddleware.js","stores/rootStore.js","stores/rootReducer.js","views/components/main-nav/components/MenuNavLink.js","views/components/main-nav/MainNav.jsx","views/components/toasts/Toasts.jsx","views/App.jsx","index.jsx","models/HttpErrorResponseModel.js","environments/production.js","environments/base.js","utilities/HttpUtility.js","stores/shows/models/shows/CountryModel.js","stores/shows/models/shows/NetworkModel.js","stores/shows/models/ImageModel.js","stores/shows/models/shows/ShowModel.js","stores/shows/models/episodes/EpisodeModel.js","stores/shows/models/cast/PersonModel.js","stores/shows/models/cast/CharacterModel.js","stores/shows/models/cast/CastModel.js","utilities/EffectUtility.js","stores/shows/ShowsEffect.js","stores/shows/ShowsAction.js"],"names":["module","exports","LoadingIndicator","this","props","children","isActive","className","cssClasses","classNames","styles","wrapper","loaderContainer","content","active","inverted","size","React","PureComponent","defaultProps","undefined","ActionUtility","dispatch","actionType","effect","createAction","args","model","isError","HttpErrorResponseModel","type","payload","error","meta","RequestingReducer","state","initialState","action","isRequestType","includes","requestName","replace","isFinishedRequestType","ErrorAction","id","REMOVE","CLEAR_ALL","ErrorReducer","Object","entries","reduce","newState","key","value","isStartRequestType","stateWithoutFinishedType","Boolean","BaseReducer","reducer","method","call","ShowsAction","REQUEST_SHOW_FINISHED","REQUEST_EPISODES_FINISHED","REQUEST_CAST_FINISHED","ShowsReducer","currentShowId","show","episodes","actors","ToastsAction","message","ADD_TOAST","uuid","toastId","REMOVE_TOAST","ToastStatusEnum","ToastsReducer","items","filter","RouteEnum","errorToastMiddleware","store","next","errorAction","add","Error","history","middleware","environment","isDevelopment","reduxFreeze","thunk","routerMiddleware","createStore","reducerMap","requesting","router","connectRouter","shows","toasts","combineReducers","rootReducer","composeWithDevTools","applyMiddleware","MenuNavLink","exact","activeClassName","MainNav","Segment","Menu","pointing","secondary","Item","as","to","Home","name","Episodes","About","Toasts","buttonColorMap","Warning","Success","_onClickRemoveNotification","event","data","removeById","length","map","item","buttonColor","Card","Content","Header","Description","extra","Button","color","onClick","Component","connect","ownProps","HomePage","lazy","EpisodesPage","AboutPage","NotFoundPage","App","fallback","path","component","window","a","createBrowserHistory","basename","route","baseRoute","rootStore","rootEl","document","getElementById","el","ReactDOM","render","status","errors","url","raw","env","baseApi","api","cast","errorExample","isProduction","RequestMethod","HttpUtility","endpoint","params","requestConfig","paramsConfig","_request","config","restRequest","console","axiosRequestConfig","headers","oc","axios","axiosResponse","request","success","_fillInErrorWithDefaults","join","responseURL","response","statusText","hasOwnProperty","CountryModel","code","timezone","update","BaseModel","NetworkModel","country","ImageModel","medium","original","ShowModel","summary","genres","network","image","EpisodeModel","season","number","airdate","PersonModel","birthday","CharacterModel","CastModel","person","character","self","voice","EffectUtility","Model","get","_restModelCreator","post","Array","isArray","json","ShowsEffect","showId","getToModel","getState","createThunkEffect","REQUEST_SHOW","requestShow","REQUEST_EPISODES","requestEpisodes","REQUEST_CAST","requestCast","REQUEST_ERROR","requestError","REQUEST_ERROR_FINISHED"],"mappings":"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","file":"static/js/main.b6ff913e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoadingIndicator_wrapper__3M33C\",\"loaderContainer\":\"LoadingIndicator_loaderContainer__A450d\"};","import styles from './LoadingIndicator.module.scss';\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Loader } from 'semantic-ui-react';\n\nexport default class LoadingIndicator extends React.PureComponent {\n  static defaultProps = {\n    className: undefined,\n    isActive: false,\n  };\n\n  render() {\n    const { children, isActive, className } = this.props;\n    const cssClasses = classNames(className, {\n      [styles.wrapper]: isActive,\n    });\n\n    return (\n      <div className={cssClasses}>\n        {isActive && (\n          <div className={styles.loaderContainer}>\n            <Loader content=\"Loading\" active={true} inverted={true} size=\"huge\" />\n          </div>\n        )}\n        {children}\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Toasts_wrapper__17gGv\"};","import HttpErrorResponseModel from '../models/HttpErrorResponseModel';\n\nexport default class ActionUtility {\n  static async createThunkEffect(dispatch, actionType, effect, ...args) {\n    dispatch(ActionUtility.createAction(actionType));\n\n    const model = await effect(...args);\n    const isError = model instanceof HttpErrorResponseModel;\n\n    dispatch(ActionUtility.createAction(`${actionType}_FINISHED`, model, isError));\n\n    return model;\n  }\n\n  static createAction(type, payload, error = false, meta = null) {\n    return { type, payload, error, meta };\n  }\n}\n","/*\n * Note: This reducer breaks convention on how reducers should be setup.\n */\nexport default class RequestingReducer {\n  static initialState = {};\n\n  static reducer(state = RequestingReducer.initialState, action) {\n    // We only take actions that include 'REQUEST_' in the type.\n    const isRequestType = action.type.includes('REQUEST_');\n\n    if (isRequestType === false) {\n      return state;\n    }\n\n    // Remove the string '_FINISHED' from the action type so we can use the first part as the key on the state.\n    const requestName = action.type.replace('_FINISHED', '');\n    // If the action type includes '_FINISHED'. The boolean value will be false. Otherwise we\n    // assume it is a starting request and will be set to true.\n    const isFinishedRequestType = action.type.includes('_FINISHED');\n\n    return {\n      ...state,\n      [requestName]: isFinishedRequestType === false,\n    };\n  }\n}\n","import ActionUtility from '../../utilities/ActionUtility';\n\nexport default class ErrorAction {\n  static CLEAR_ALL = 'ErrorAction.CLEAR_ALL';\n  static REMOVE = 'ErrorAction.REMOVE';\n\n  static removeById(id) {\n    return ActionUtility.createAction(ErrorAction.REMOVE, id);\n  }\n\n  static clearAll() {\n    return ActionUtility.createAction(ErrorAction.CLEAR_ALL);\n  }\n}\n","import ErrorAction from './ErrorAction';\n\n/*\n * Note: This reducer breaks convention on how reducers should be setup.\n */\nexport default class ErrorReducer {\n  static initialState = {};\n\n  static reducer(state = ErrorReducer.initialState, action) {\n    const { type, error, payload } = action;\n\n    /*\n     * Removes an HttpErrorResponseModel by it's id that is in the action payload.\n     */\n    if (type === ErrorAction.REMOVE) {\n      // Create a new state without the error that has the same id as the payload.\n      return Object.entries(state).reduce((newState, [key, value]) => {\n        if (value.id !== payload) {\n          newState[key] = value;\n        }\n\n        return newState;\n      }, {});\n    }\n\n    /*\n     * Removes all errors by returning the initial state which is an empty object.\n     */\n    if (type === ErrorAction.CLEAR_ALL) {\n      return ErrorReducer.initialState;\n    }\n\n    /*\n     * True if the action type has the key word '_FINISHED' then the action is finished.\n     */\n    const isFinishedRequestType = type.includes('_FINISHED');\n    /*\n     * True if the action type has the key word 'REQUEST_' and not '_FINISHED'.\n     */\n    const isStartRequestType = type.includes('REQUEST_') && !isFinishedRequestType;\n\n    /*\n     * If an action is started we want to remove any old errors because there is a new action has been re-dispatched.\n     */\n    if (isStartRequestType) {\n      // Using ES7 Object Rest Spread operator to omit properties from an object.\n      const { [`${type}_FINISHED`]: value, ...stateWithoutFinishedType } = state;\n\n      return stateWithoutFinishedType;\n    }\n\n    /*\n     * True if the action is finished and the error property is true.\n     */\n    const isError = isFinishedRequestType && Boolean(error);\n\n    /*\n     * For any start and finished actions that don't have errors we return the current state.\n     */\n    if (isError === false) {\n      return state;\n    }\n\n    /*\n     * At this point the \"type\" will be a finished action type (e.g. \"SomeAction.REQUEST_*_FINISHED\").\n     * The payload will be a HttpErrorResponseModel.\n     */\n    return {\n      ...state,\n      [type]: payload,\n    };\n  }\n}\n","export default class BaseReducer {\n  initialState = {};\n\n  reducer = (state = this.initialState, action) => {\n    // if the action type is used for a method name then this be a reference to\n    // that class method.\n    // if the action type is not found then the \"method\" const will be undefined.\n    const method = this[action.type];\n\n    // if the action type \"method\" const is undefined or the action is an error\n    // return the state.\n    if (!method || action.error) {\n      return state;\n    }\n\n    // Calls the method with the correct \"this\" and returns the modified state.\n    return method.call(this, state, action);\n  };\n}\n","import ShowsAction from './ShowsAction';\nimport BaseReducer from '../../utilities/BaseReducer';\n\nexport default class ShowsReducer extends BaseReducer {\n  initialState = {\n    currentShowId: '74',\n    show: null,\n    episodes: [],\n    actors: [],\n  };\n\n  [ShowsAction.REQUEST_SHOW_FINISHED](state, action) {\n    return {\n      ...state,\n      show: action.payload,\n    };\n  }\n\n  [ShowsAction.REQUEST_EPISODES_FINISHED](state, action) {\n    return {\n      ...state,\n      episodes: action.payload,\n    };\n  }\n\n  [ShowsAction.REQUEST_CAST_FINISHED](state, action) {\n    return {\n      ...state,\n      actors: action.payload,\n    };\n  }\n}\n","import ActionUtility from '../../utilities/ActionUtility';\nimport uuid from 'uuid/v4';\n\nexport default class ToastsAction {\n  static ADD_TOAST = 'ToastsAction.ADD_TOAST';\n  static REMOVE_TOAST = 'ToastsAction.REMOVE_TOAST';\n\n  static add(message, type) {\n    return ActionUtility.createAction(ToastsAction.ADD_TOAST, {\n      message,\n      type,\n      id: uuid(),\n    });\n  }\n\n  static removeById(toastId) {\n    return ActionUtility.createAction(ToastsAction.REMOVE_TOAST, toastId);\n  }\n}\n","import ToastsAction from './ToastsAction';\nimport BaseReducer from '../../utilities/BaseReducer';\n\nexport default class ToastsReducer extends BaseReducer {\n  initialState = {\n    items: [],\n  };\n\n  [ToastsAction.ADD_TOAST](state, action) {\n    return {\n      ...state,\n      items: [...state.items, action.payload],\n    };\n  }\n\n  [ToastsAction.REMOVE_TOAST](state, action) {\n    const toastId = action.payload;\n\n    return {\n      ...state,\n      items: state.items.filter((model) => model.id !== toastId),\n    };\n  }\n}\n","enum ToastStatusEnum {\n  Error = 'error',\n  Warning = 'warning',\n  Success = 'success',\n}\n\nexport default ToastStatusEnum;\n","enum RouteEnum {\n  Home = '/',\n  Episodes = '/episodes',\n  About = '/about',\n}\n\nexport default RouteEnum;\n","import ToastStatusEnum from '../constants/ToastStatusEnum';\nimport ToastsAction from '../stores/toasts/ToastsAction';\n\nconst errorToastMiddleware = () => (store) => (next) => (action) => {\n  if (action.error) {\n    const errorAction = action;\n\n    next(ToastsAction.add(errorAction.payload.message, ToastStatusEnum.Error));\n  }\n\n  next(action);\n};\n\nexport default errorToastMiddleware;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport { routerMiddleware } from 'connected-react-router';\nimport reduxFreeze from 'redux-freeze';\nimport environment from 'environment';\nimport rootReducer from './rootReducer';\nimport errorToastMiddleware from '../middlewares/errorToastMiddleware';\n\nexport default (initialState, history) => {\n  const middleware = [environment.isDevelopment ? reduxFreeze : null, thunk, routerMiddleware(history), errorToastMiddleware()].filter(Boolean);\n\n  const store = createStore(rootReducer(history), initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\n  // store.subscribe(() => console.log(store.getState()));\n\n  return store;\n};\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport RequestingReducer from './requesting/RequestingReducer';\nimport ErrorReducer from './error/ErrorReducer';\nimport ShowsReducer from './shows/ShowsReducer';\nimport ToastsReducer from './toasts/ToastsReducer';\n\nexport default (history) => {\n  const reducerMap = {\n    error: ErrorReducer.reducer,\n    requesting: RequestingReducer.reducer,\n    router: connectRouter(history),\n    shows: new ShowsReducer().reducer,\n    toasts: new ToastsReducer().reducer,\n  };\n\n  return combineReducers(reducerMap);\n};\n","import { NavLink } from 'react-router-dom';\nimport * as React from 'react';\n\nconst MenuNavLink = (props) => {\n  return <NavLink exact={true} {...props} activeClassName=\"active\" />;\n};\n\nexport default MenuNavLink;\n","import * as React from 'react';\nimport { Menu, Segment } from 'semantic-ui-react';\nimport MenuNavLink from './components/MenuNavLink';\nimport RouteEnum from '../../../constants/RouteEnum';\n\nexport default class MainNav extends React.PureComponent {\n  render() {\n    return (\n      <Segment inverted={true}>\n        <Menu inverted={true} pointing={true} secondary={true}>\n          <Menu.Item as={MenuNavLink} to={RouteEnum.Home} name=\"Home\" />\n          <Menu.Item as={MenuNavLink} to={RouteEnum.Episodes} name=\"Episodes\" />\n          <Menu.Item as={MenuNavLink} to={RouteEnum.About} name=\"About\" />\n        </Menu>\n      </Segment>\n    );\n  }\n}\n","import styles from './Toasts.module.scss';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ToastsAction from '../../../stores/toasts/ToastsAction';\nimport { Card, Button } from 'semantic-ui-react';\nimport ToastStatusEnum from '../../../constants/ToastStatusEnum';\n\nconst mapStateToProps = (state, ownProps) => ({\n  toasts: state.toasts.items,\n});\n\nclass Toasts extends React.Component {\n  buttonColorMap = {\n    [ToastStatusEnum.Error]: 'red',\n    [ToastStatusEnum.Warning]: 'orange',\n    [ToastStatusEnum.Success]: 'green',\n  };\n\n  render() {\n    const { toasts } = this.props;\n\n    if (toasts.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className={styles.wrapper}>\n        {toasts.map((item) => {\n          const buttonColor = this.buttonColorMap[item.type];\n\n          return (\n            <Card key={item.id}>\n              <Card.Content>\n                <Card.Header content={item.type} />\n                <Card.Description content={item.message} />\n              </Card.Content>\n              <Card.Content extra={true}>\n                <Button color={buttonColor} onClick={this._onClickRemoveNotification(item.id)}>\n                  Close\n                </Button>\n              </Card.Content>\n            </Card>\n          );\n        })}\n      </div>\n    );\n  }\n\n  _onClickRemoveNotification = (id) => (event, data) => {\n    this.props.dispatch(ToastsAction.removeById(id));\n  };\n}\n\nexport { Toasts as Unconnected };\nexport default connect(mapStateToProps)(Toasts);\n","import React, { Suspense, lazy } from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport RouteEnum from '../constants/RouteEnum';\nimport MainNav from './components/main-nav/MainNav';\nimport LoadingIndicator from './components/loading-indicator/LoadingIndicator';\nimport Toasts from './components/toasts/Toasts';\n\nconst HomePage = lazy(() => import('./home-page/HomePage'));\nconst EpisodesPage = lazy(() => import('./episodes-page/EpisodesPage'));\nconst AboutPage = lazy(() => import('./about-page/AboutPage'));\nconst NotFoundPage = lazy(() => import('./not-found-page/NotFoundPage'));\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <ConnectedRouter history={this.props.history}>\n        <Suspense fallback={<LoadingIndicator isActive={true} />}>\n          <MainNav />\n          <Switch>\n            <Route exact={true} path={RouteEnum.Home} component={HomePage} />\n            <Route path={RouteEnum.Episodes} component={EpisodesPage} />\n            <Route path={RouteEnum.About} component={AboutPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n          <Toasts />\n        </Suspense>\n      </ConnectedRouter>\n    );\n  }\n}\n","import './index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport rootStore from './stores/rootStore';\nimport App from './views/App';\nimport environment from 'environment';\n\n(async (window) => {\n  const initialState = {};\n  const history = createBrowserHistory({ basename: environment.route.baseRoute });\n  const store = rootStore(initialState, history);\n\n  const rootEl = document.getElementById('root');\n\n  const render = (Component, el) => {\n    ReactDOM.render(\n      <Provider store={store}>\n        <Component history={history} dispatch={store.dispatch} />\n      </Provider>,\n      el\n    );\n  };\n\n  render(App, rootEl);\n})(window);\n","import uuid from 'uuid/v4';\n\nexport default class HttpErrorResponseModel {\n  id = uuid();\n  status = 0;\n  message = '';\n  errors = [];\n  url = '';\n  raw = null;\n}\n","import environment from './base';\n\n/*\n * base.ts is the default environment for production.\n * You shouldn't have override anything.\n */\n\nconst baseApi = 'https://api.tvmaze.com';\nconst env = environment(baseApi);\n\nexport default {\n  ...env,\n  route: {\n    ...env.route,\n    baseRoute: '/react-redux-architecture', // Fixes issue with Github Pages\n  },\n};\n","/*\n * Base is the default environment for production.\n * Add everything here and override value in other files if needed.\n */\n\nexport default function(baseApi) {\n  return {\n    route: {\n      baseRoute: '',\n    },\n    api: {\n      shows: `${baseApi}/shows/:showId`,\n      episodes: `${baseApi}/shows/:showId/episodes`,\n      cast: `${baseApi}/shows/:showId/cast`,\n      errorExample: 'https://httpstat.us/520',\n    },\n    isProduction: true,\n    isDevelopment: false,\n  };\n}\n","import axios from 'axios';\nimport HttpErrorResponseModel from '../models/HttpErrorResponseModel';\nimport { oc } from 'ts-optchain';\n\nconst RequestMethod = {\n  Get: 'GET',\n  Post: 'POST',\n  Put: 'PUT',\n  Delete: 'DELETE',\n  Options: 'OPTIONS',\n  Head: 'HEAD',\n  Patch: 'PATCH',\n};\n\nexport default class HttpUtility {\n  static async get(endpoint, params, requestConfig) {\n    const paramsConfig = params ? { params } : undefined;\n\n    return HttpUtility._request(\n      {\n        url: endpoint,\n        method: RequestMethod.Get,\n      },\n      {\n        ...paramsConfig,\n        ...requestConfig,\n      }\n    );\n  }\n\n  static async post(endpoint, data) {\n    const config = data ? { data } : undefined;\n\n    return HttpUtility._request(\n      {\n        url: endpoint,\n        method: RequestMethod.Post,\n      },\n      config\n    );\n  }\n\n  static async put(endpoint, data) {\n    const config = data ? { data } : undefined;\n\n    return HttpUtility._request(\n      {\n        url: endpoint,\n        method: RequestMethod.Put,\n      },\n      config\n    );\n  }\n\n  static async delete(endpoint) {\n    return HttpUtility._request({\n      url: endpoint,\n      method: RequestMethod.Delete,\n    });\n  }\n\n  static async _request(restRequest, config) {\n    if (!Boolean(restRequest.url)) {\n      console.error(`Received ${restRequest.url} which is invalid for a endpoint url`);\n    }\n\n    try {\n      const axiosRequestConfig = {\n        ...config,\n        method: restRequest.method,\n        url: restRequest.url,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          ...oc(config).headers(undefined),\n        },\n      };\n      const axiosResponse = await axios(axiosRequestConfig);\n\n      const { status, data, request } = axiosResponse;\n\n      if (data.success === false) {\n        return HttpUtility._fillInErrorWithDefaults(\n          {\n            status,\n            message: data.errors.join(' - '),\n            errors: data.errors,\n            url: request ? request.responseURL : restRequest.url,\n            raw: axiosResponse,\n          },\n          restRequest\n        );\n      }\n\n      return {\n        ...axiosResponse,\n      };\n    } catch (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code that falls out of the range of 2xx\n        const { status, statusText, data } = error.response;\n        const errors = data.hasOwnProperty('errors') ? [statusText, ...data.errors] : [statusText];\n\n        return HttpUtility._fillInErrorWithDefaults(\n          {\n            status,\n            message: errors.filter(Boolean).join(' - '),\n            errors,\n            url: error.request.responseURL,\n            raw: error.response,\n          },\n          restRequest\n        );\n      } else if (error.request) {\n        // The request was made but no response was received `error.request` is an instance of XMLHttpRequest in the browser and an instance of http.ClientRequest in node.js\n        const { status, statusText, responseURL } = error.request;\n\n        return HttpUtility._fillInErrorWithDefaults(\n          {\n            status,\n            message: statusText,\n            errors: [statusText],\n            url: responseURL,\n            raw: error.request,\n          },\n          restRequest\n        );\n      }\n\n      // Something happened in setting up the request that triggered an Error\n      return HttpUtility._fillInErrorWithDefaults(\n        {\n          status: 0,\n          message: error.message,\n          errors: [error.message],\n          url: restRequest.url,\n          raw: error,\n        },\n        restRequest\n      );\n    }\n  }\n\n  static _fillInErrorWithDefaults(error, request) {\n    const model = new HttpErrorResponseModel();\n\n    model.status = error.status || 0;\n    model.message = error.message || 'Error requesting data';\n    model.errors = error.errors.length ? error.errors : ['Error requesting data'];\n    model.url = error.url || request.url;\n    model.raw = error.raw;\n\n    // Remove anything with undefined or empty strings.\n    model.errors = model.errors.filter(Boolean);\n\n    return model;\n  }\n}\n","import { BaseModel } from 'sjs-base-model';\n\n/*\n    // Returned Api Data Sample\n    {\n      \"name\": \"United States\",\n      \"code\": \"US\",\n      \"timezone\": \"America/New_York\"\n    }\n */\nexport default class CountryModel extends BaseModel {\n  name = '';\n  code = '';\n  timezone = '';\n\n  /*\n   * Client-Side properties (Not from API)\n   */\n  // noneApiProperties = null;\n\n  constructor(data) {\n    super();\n\n    this.update(data);\n  }\n}\n","import { BaseModel } from 'sjs-base-model';\nimport CountryModel from './CountryModel';\n\n/*\n    // Returned Api Data Sample\n    {\n      \"id\": 20,\n      \"name\": \"AMC\",\n      \"country\": {\n        \"name\": \"United States\",\n        \"code\": \"US\",\n        \"timezone\": \"America/New_York\"\n      }\n    }\n */\nexport default class NetworkModel extends BaseModel {\n  id = 0;\n  name = '';\n  country = CountryModel;\n\n  /*\n   * Client-Side properties (Not from API)\n   */\n  // noneApiProperties = null;\n\n  constructor(data) {\n    super();\n\n    this.update(data);\n  }\n}\n","import { BaseModel } from 'sjs-base-model';\n\n/*\n    // Returned Api Data Sample\n    {\n      \"medium\": \"http://static.tvmaze.com/uploads/images/medium_portrait/0/526.jpg\",\n      \"original\": \"http://static.tvmaze.com/uploads/images/original_untouched/0/526.jpg\"\n    }\n */\nexport default class ImageModel extends BaseModel {\n  medium = '';\n  original = '';\n\n  /*\n   * Client-Side properties (Not from API)\n   */\n  // noneApiProperties = null;\n\n  constructor(data) {\n    super();\n\n    this.update(data);\n  }\n}\n","import { BaseModel } from 'sjs-base-model';\nimport NetworkModel from './NetworkModel';\nimport ImageModel from '../ImageModel';\n\n/*\n    // Returned Api Data Sample\n    {\n      \"id\": 74,\n      \"url\": \"http://www.tvmaze.com/shows/74/hell-on-wheels\",\n      \"name\": \"Hell on Wheels\",\n      \"type\": \"Scripted\",\n      \"language\": \"English\",\n      \"genres\": [\n        \"Drama\",\n        \"Action\",\n        \"Western\"\n      ],\n      \"status\": \"Ended\",\n      \"runtime\": 60,\n      \"premiered\": \"2011-11-06\",\n      \"officialSite\": \"http://www.amctv.com/shows/hell-on-wheels\",\n      \"schedule\": {\n        \"time\": \"21:00\",\n        \"days\": [\n          \"Saturday\"\n        ]\n      },\n      \"rating\": {\n        \"average\": 8.5\n      },\n      \"weight\": 82,\n      \"network\": {\n        \"id\": 20,\n        \"name\": \"AMC\",\n        \"country\": {\n          \"name\": \"United States\",\n          \"code\": \"US\",\n          \"timezone\": \"America/New_York\"\n        }\n      },\n      \"webChannel\": null,\n      \"externals\": {\n        \"tvrage\": 27195,\n        \"thetvdb\": 212961,\n        \"imdb\": \"tt1699748\"\n      },\n      \"image\": {\n        \"medium\": \"http://static.tvmaze.com/uploads/images/medium_portrait/0/526.jpg\",\n        \"original\": \"http://static.tvmaze.com/uploads/images/original_untouched/0/526.jpg\"\n      },\n      \"summary\": \"<p><b>Hell on Wheels</b> is an American Western television series about the construction of the First Transcontinental Railroad across the United States. The series follows the Union Pacific Railroad and its surveyors, laborers, prostitutes, mercenaries, and others who lived, worked and died in the mobile encampment called \\\"Hell on Wheels\\\" that followed the railhead west across the Great Plains. In particular, the story focuses on Cullen Bohannon, a former Confederate soldier who, while working as foreman and chief engineer on the railroad, initially attempts to track down the Union soldiers who murdered his wife and young son during the American Civil War.</p>\",\n      \"updated\": 1560886410,\n      \"_links\": {\n        \"self\": {\n          \"href\": \"http://api.tvmaze.com/shows/74\"\n        },\n        \"previousepisode\": {\n          \"href\": \"http://api.tvmaze.com/episodes/862325\"\n        }\n      }\n    }\n */\nexport default class ShowModel extends BaseModel {\n  id = 0;\n  name = '';\n  summary = '';\n  genres = [];\n  network = NetworkModel;\n  image = ImageModel;\n\n  /*\n   * Client-Side properties (Not from API)\n   */\n  // noneApiProperties = null;\n\n  constructor(data) {\n    super();\n\n    this.update(data);\n  }\n}\n","import { BaseModel } from 'sjs-base-model';\nimport ImageModel from '../ImageModel';\n\n/*\n    // Returned Api Data Sample\n    {\n      \"id\": 4155,\n      \"url\": \"http://www.tvmaze.com/episodes/4155/hell-on-wheels-1x01-pilot\",\n      \"name\": \"Pilot\",\n      \"season\": 1,\n      \"number\": 1,\n      \"airdate\": \"2011-11-06\",\n      \"airtime\": \"22:00\",\n      \"airstamp\": \"2011-11-07T03:00:00+00:00\",\n      \"runtime\": 60,\n      \"image\": {\n        \"medium\": \"http://static.tvmaze.com/uploads/images/medium_landscape/9/22633.jpg\",\n        \"original\": \"http://static.tvmaze.com/uploads/images/original_untouched/9/22633.jpg\"\n      },\n      \"summary\": \"<p>A Western about a former Confederate soldier (Anson Mount) and his quest for revenge on the Union troops who killed his wife. In the premiere episode, he heads west to take a job helping to construct the first transcontinental railroad.</p>\",\n      \"_links\": {\n        \"self\": {\n          \"href\": \"http://api.tvmaze.com/episodes/4155\"\n        }\n      }\n    }\n */\nexport default class EpisodeModel extends BaseModel {\n  id = 0;\n  season = 0;\n  number = 0;\n  name = '';\n  airdate = '';\n  image = ImageModel;\n  summary = '';\n\n  /*\n   * Client-Side properties (Not from API)\n   */\n  // noneApiProperties = null;\n\n  constructor(data) {\n    super();\n\n    this.update(data);\n  }\n}\n","import { BaseModel } from 'sjs-base-model';\nimport ImageModel from '../ImageModel';\n\n/*\n    // Returned Api Data Sample\n    {\n      \"id\": 10709,\n      \"url\": \"http://www.tvmaze.com/people/10709/anson-mount\",\n      \"name\": \"Anson Mount\",\n      \"country\": {\n        \"name\": \"United States\",\n        \"code\": \"US\",\n        \"timezone\": \"America/New_York\"\n      },\n      \"birthday\": \"1973-02-25\",\n      \"deathday\": null,\n      \"gender\": \"Male\",\n      \"image\": {\n        \"medium\": \"http://static.tvmaze.com/uploads/images/medium_portrait/0/2326.jpg\",\n        \"original\": \"http://static.tvmaze.com/uploads/images/original_untouched/0/2326.jpg\"\n      },\n      \"_links\": {\n        \"self\": {\n          \"href\": \"http://api.tvmaze.com/people/10709\"\n        }\n      }\n    }\n */\nexport default class PersonModel extends BaseModel {\n  id = 0;\n  name = '';\n  birthday = '';\n  image = ImageModel;\n\n  /*\n   * Client-Side properties (Not from API)\n   */\n  // noneApiProperties = null;\n\n  constructor(data) {\n    super();\n\n    this.update(data);\n  }\n}\n","import { BaseModel } from 'sjs-base-model';\nimport ImageModel from '../ImageModel';\n\n/*\n    // Returned Api Data Sample\n    {\n      \"id\": 11320,\n      \"url\": \"http://www.tvmaze.com/characters/11320/hell-on-wheels-cullen-bohannon\",\n      \"name\": \"Cullen Bohannon\",\n      \"image\": {\n        \"medium\": \"http://static.tvmaze.com/uploads/images/medium_portrait/3/9064.jpg\",\n        \"original\": \"http://static.tvmaze.com/uploads/images/original_untouched/3/9064.jpg\"\n      },\n      \"_links\": {\n        \"self\": {\n          \"href\": \"http://api.tvmaze.com/characters/11320\"\n        }\n      }\n    }\n */\nexport default class CharacterModel extends BaseModel {\n  id = 0;\n  name = '';\n  image = ImageModel;\n\n  /*\n   * Client-Side properties (Not from API)\n   */\n  // noneApiProperties = null;\n\n  constructor(data) {\n    super();\n\n    this.update(data);\n  }\n}\n","import { BaseModel } from 'sjs-base-model';\nimport PersonModel from './PersonModel';\nimport CharacterModel from './CharacterModel';\n\n/*\n    // Returned Api Data Sample\n    {\n      \"person\": {},\n      \"character\": {},\n      \"self\": false,\n      \"voice\": false\n    }\n */\nexport default class CastModel extends BaseModel {\n  person = PersonModel;\n  character = CharacterModel;\n  self = false;\n  voice = false;\n\n  /*\n   * Client-Side properties (Not from API)\n   */\n  // noneApiProperties = null;\n\n  constructor(data) {\n    super();\n\n    this.update(data);\n  }\n}\n","import HttpErrorResponseModel from '../models/HttpErrorResponseModel';\nimport HttpUtility from './HttpUtility';\n\nexport default class EffectUtility {\n  static async getToModel(Model, endpoint, params) {\n    const response = await HttpUtility.get(endpoint, params);\n\n    return EffectUtility._restModelCreator(Model, response);\n  }\n\n  static async postToModel(Model, endpoint, data) {\n    const response = await HttpUtility.post(endpoint, data);\n\n    return EffectUtility._restModelCreator(Model, response);\n  }\n\n  static _restModelCreator(Model, response) {\n    if (response instanceof HttpErrorResponseModel) {\n      return response;\n    }\n\n    return !Array.isArray(response.data) ? new Model(response.data) : response.data.map((json) => new Model(json));\n  }\n}\n","import environment from 'environment';\nimport HttpErrorResponseModel from '../../models/HttpErrorResponseModel';\nimport HttpUtility from '../../utilities/HttpUtility';\nimport ShowModel from './models/shows/ShowModel';\nimport EpisodeModel from './models/episodes/EpisodeModel';\nimport CastModel from './models/cast/CastModel';\nimport EffectUtility from '../../utilities/EffectUtility';\n\nexport default class ShowsEffect {\n  static async requestShow(showId) {\n    const endpoint = environment.api.shows.replace(':showId', showId);\n\n    return EffectUtility.getToModel(ShowModel, endpoint);\n  }\n\n  static async requestEpisodes(showId) {\n    const endpoint = environment.api.episodes.replace(':showId', showId);\n\n    return EffectUtility.getToModel(EpisodeModel, endpoint);\n  }\n\n  static async requestCast(showId) {\n    const endpoint = environment.api.cast.replace(':showId', showId);\n\n    // Below is just to show you what the above \"requestEpisodes\" method is doing with \"HttpUtility.getToModel\".\n    // In your application you can change this to match the \"requestEpisodes\" method.\n    const response = await HttpUtility.get(endpoint);\n\n    if (response instanceof HttpErrorResponseModel) {\n      return response;\n    }\n\n    return response.data.map((json) => new CastModel(json));\n  }\n\n  /**\n   * This is only to trigger an error api response so we can use it for an example in the AboutPage\n   */\n  static async requestError() {\n    const endpoint = environment.api.errorExample;\n    const response = await HttpUtility.get(endpoint);\n\n    if (response instanceof HttpErrorResponseModel) {\n      return response;\n    }\n\n    return response.data;\n  }\n}\n","import ShowsEffect from './ShowsEffect';\nimport ActionUtility from '../../utilities/ActionUtility';\n\nexport default class ShowsAction {\n  static REQUEST_SHOW = 'ShowsAction.REQUEST_SHOW';\n  static REQUEST_SHOW_FINISHED = 'ShowsAction.REQUEST_SHOW_FINISHED';\n\n  static REQUEST_EPISODES = 'ShowsAction.REQUEST_EPISODES';\n  static REQUEST_EPISODES_FINISHED = 'ShowsAction.REQUEST_EPISODES_FINISHED';\n\n  static REQUEST_CAST = 'ShowsAction.REQUEST_CAST';\n  static REQUEST_CAST_FINISHED = 'ShowsAction.REQUEST_CAST_FINISHED';\n\n  static REQUEST_ERROR = 'ShowsAction.REQUEST_ERROR';\n  static REQUEST_ERROR_FINISHED = 'ShowsAction.REQUEST_ERROR_FINISHED';\n\n  static requestShow() {\n    return async (dispatch, getState) => {\n      const showId = getState().shows.currentShowId;\n\n      await ActionUtility.createThunkEffect(dispatch, ShowsAction.REQUEST_SHOW, ShowsEffect.requestShow, showId);\n    };\n  }\n\n  static requestEpisodes() {\n    return async (dispatch, getState) => {\n      const showId = getState().shows.currentShowId;\n\n      await ActionUtility.createThunkEffect(dispatch, ShowsAction.REQUEST_EPISODES, ShowsEffect.requestEpisodes, showId);\n    };\n  }\n\n  static requestCast() {\n    return async (dispatch, getState) => {\n      const showId = getState().shows.currentShowId;\n\n      await ActionUtility.createThunkEffect(dispatch, ShowsAction.REQUEST_CAST, ShowsEffect.requestCast, showId);\n    };\n  }\n\n  static requestError() {\n    return async (dispatch, getState) => {\n      await ActionUtility.createThunkEffect(dispatch, ShowsAction.REQUEST_ERROR, ShowsEffect.requestError);\n    };\n  }\n}\n"],"sourceRoot":""}
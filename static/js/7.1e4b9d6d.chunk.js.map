{"version":3,"sources":["selectors/requesting/RequestingSelector.js","selectors/episodes/EpisodesSelector.js","views/episodes-page/components/episodes-table-row/EpisodesTableRow.jsx","views/episodes-page/components/episodes-table/EpisodesTable.jsx","views/episodes-page/EpisodesPage.jsx"],"names":["RequestingSelector","requestingState","actionTypes","some","actionType","selectRequesting","createSelector","state","requesting","EpisodesSelector","episodes","seasons","groupBy","Object","entries","map","season","models","title","rows","_createTableRows","model","episode","number","name","date","dayjs","airdate","format","image","medium","selectEpisodes","shows","EpisodesTableRow","rowData","this","props","Table","Row","key","Cell","Image","src","rounded","size","React","EpisodesTable","tableData","Header","as","HeaderCell","width","Body","EpisodesPage","dispatch","ShowsAction","requestEpisodes","isRequesting","episodeTables","LoadingIndicator","isActive","connect","ownProps","REQUEST_EPISODES"],"mappings":"4LAEaA,EAAb,8GAC0BC,EAAiBC,GACvC,OAAOA,EAAYC,KAAK,SAACC,GAAD,OAAgBH,EAAgBG,SAF5D,KAMaC,EAAmBC,YAC9B,SAACC,GAAD,OAAWA,EAAMC,YACjB,SAACD,EAAOL,GAAR,OAAwBA,GACxBF,EAAmBK,mB,gKCPRI,EAAb,4GACwBC,GACpB,IAAMC,EAAUC,IAAQF,EAAU,UAElC,OAAOG,OAAOC,QAAQH,GAASI,IAAI,YAAuB,IAAD,mBAApBC,EAAoB,KAAZC,EAAY,KACvD,MAAO,CACLC,MAAM,UAAD,OAAYF,GACjBG,KAAMV,EAAiBW,iBAAiBH,QAPhD,uCAY0BA,GACtB,OAAOA,EAAOF,IAAI,SAACM,GAAD,MAAY,CAC5BC,QAASD,EAAME,OACfC,KAAMH,EAAMG,KACZC,KAAMC,IAAML,EAAMM,SAASC,OAAO,eAClCC,MAAOR,EAAMQ,MAAMC,cAjBzB,KAsBaC,EAAiBzB,YAC5B,SAACC,GAAD,OAAWA,EAAMyB,MAAMtB,UACvBD,EAAiBsB,gB,6CCzBEE,E,iLACT,IACAC,EAAYC,KAAKC,MAAjBF,QAER,OACE,gBAACG,EAAA,EAAMC,IAAP,CAAWC,IAAKL,EAAQZ,SACtB,gBAACe,EAAA,EAAMG,KAAP,KACE,gBAACC,EAAA,EAAD,CAAOC,IAAKR,EAAQL,MAAOc,SAAS,EAAMC,KAAK,WAEjD,gBAACP,EAAA,EAAMG,KAAP,KAAaN,EAAQZ,SACrB,gBAACe,EAAA,EAAMG,KAAP,KAAaN,EAAQT,MACrB,gBAACY,EAAA,EAAMG,KAAP,KAAaN,EAAQV,W,GAXiBqB,iBCCzBC,E,iLACT,IACAC,EAAcZ,KAAKC,MAAnBW,UAER,OACE,uBAAKR,IAAKQ,EAAU7B,OAClB,gBAAC8B,EAAA,EAAD,CAAQC,GAAG,MAAMF,EAAU7B,OAC3B,gBAACmB,EAAA,EAAD,KACE,gBAACA,EAAA,EAAMW,OAAP,KACE,gBAACX,EAAA,EAAMC,IAAP,KACE,gBAACD,EAAA,EAAMa,WAAP,CAAkBC,MAAO,GAAzB,SACA,gBAACd,EAAA,EAAMa,WAAP,gBACA,gBAACb,EAAA,EAAMa,WAAP,aACA,gBAACb,EAAA,EAAMa,WAAP,eAGJ,gBAACb,EAAA,EAAMe,KAAP,KACGL,EAAU5B,KAAKJ,IAAI,SAACM,GAAD,OAClB,gBAAC,EAAD,CAAkBkB,IAAKlB,EAAMC,QAASY,QAASb,a,GAlBlBwB,iB,0CCI3C,IAKMQ,E,4LAEFlB,KAAKC,MAAMkB,SAASC,IAAYC,qB,+BAGxB,IAAD,EACiCrB,KAAKC,MAArCqB,EADD,EACCA,aAAcC,EADf,EACeA,cAEtB,OACE,gCACE,gBAACC,EAAA,EAAD,CAAkBC,SAAUH,IAC3BC,EAAc3C,IAAI,SAACM,GAAD,OACjB,gBAAC,EAAD,CAAekB,IAAKlB,EAAMH,MAAO6B,UAAW1B,W,GAZ3BwB,aAoBZgB,sBAzBS,SAACtD,EAAOuD,GAAR,MAAsB,CAC5CJ,cAAe3B,EAAexB,GAC9BkD,aAAcpD,YAAiBE,EAAO,CAACgD,IAAYQ,qBAuBtCF,CAAyBR","file":"static/js/7.1e4b9d6d.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nexport class RequestingSelector {\n  static selectRequesting(requestingState, actionTypes) {\n    return actionTypes.some((actionType) => requestingState[actionType]);\n  }\n}\n\nexport const selectRequesting = createSelector(\n  (state) => state.requesting,\n  (state, actionTypes) => actionTypes,\n  RequestingSelector.selectRequesting\n);\n","import { createSelector } from 'reselect';\nimport groupBy from 'lodash.groupby';\nimport dayjs from 'dayjs';\n\nexport class EpisodesSelector {\n  static selectEpisodes(episodes) {\n    const seasons = groupBy(episodes, 'season');\n\n    return Object.entries(seasons).map(([season, models]) => {\n      return {\n        title: `Season ${season}`,\n        rows: EpisodesSelector._createTableRows(models),\n      };\n    });\n  }\n\n  static _createTableRows(models) {\n    return models.map((model) => ({\n      episode: model.number,\n      name: model.name,\n      date: dayjs(model.airdate).format('MMM D, YYYY'),\n      image: model.image.medium,\n    }));\n  }\n}\n\nexport const selectEpisodes = createSelector(\n  (state) => state.shows.episodes,\n  EpisodesSelector.selectEpisodes\n);\n","import * as React from 'react';\nimport { Image, Table } from 'semantic-ui-react';\n\nexport default class EpisodesTableRow extends React.PureComponent {\n  render() {\n    const { rowData } = this.props;\n\n    return (\n      <Table.Row key={rowData.episode}>\n        <Table.Cell>\n          <Image src={rowData.image} rounded={true} size=\"small\" />\n        </Table.Cell>\n        <Table.Cell>{rowData.episode}</Table.Cell>\n        <Table.Cell>{rowData.date}</Table.Cell>\n        <Table.Cell>{rowData.name}</Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Header, Table } from 'semantic-ui-react';\nimport EpisodesTableRow from '../episodes-table-row/EpisodesTableRow';\n\nexport default class EpisodesTable extends React.PureComponent {\n  render() {\n    const { tableData } = this.props;\n\n    return (\n      <div key={tableData.title}>\n        <Header as=\"h2\">{tableData.title}</Header>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell width={1}>Scene</Table.HeaderCell>\n              <Table.HeaderCell>Episode</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {tableData.rows.map((model) => (\n              <EpisodesTableRow key={model.episode} rowData={model} />\n            ))}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport ShowsAction from '../../stores/shows/ShowsAction';\nimport { selectEpisodes } from '../../selectors/episodes/EpisodesSelector';\nimport LoadingIndicator from '../components/loading-indicator/LoadingIndicator';\nimport { selectRequesting } from '../../selectors/requesting/RequestingSelector';\nimport EpisodesTable from './components/episodes-table/EpisodesTable';\n\nconst mapStateToProps = (state, ownProps) => ({\n  episodeTables: selectEpisodes(state),\n  isRequesting: selectRequesting(state, [ShowsAction.REQUEST_EPISODES]),\n});\n\nclass EpisodesPage extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(ShowsAction.requestEpisodes());\n  }\n\n  render() {\n    const { isRequesting, episodeTables } = this.props;\n\n    return (\n      <>\n        <LoadingIndicator isActive={isRequesting} />\n        {episodeTables.map((model) => (\n          <EpisodesTable key={model.title} tableData={model} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport { EpisodesPage as Unconnected };\nexport default connect(mapStateToProps)(EpisodesPage);\n"],"sourceRoot":""}
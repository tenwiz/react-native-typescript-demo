{"version":3,"sources":["../node_modules/reselect/es/index.js","selectors/requesting/RequestingSelector.js","../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","../node_modules/semantic-ui-react/dist/es/elements/Header/Header.js","selectors/error/ErrorSelector.js","../node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","../node_modules/semantic-ui-react/dist/es/collections/Message/Message.js","views/about-page/AboutPage.jsx"],"names":["defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","push","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","RequestingSelector","requestingState","actionTypes","some","actionType","selectRequesting","state","requesting","HeaderSubheader","props","children","className","content","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","isNil","handledProps","propTypes","create","HeaderContent","Header","attached","block","color","disabled","dividing","floated","icon","image","inverted","size","sub","subheader","textAlign","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Content","Subheader","ErrorSelector","errorState","reduce","partialState","partialErrorState","selectRawErrors","errorMessages","message","errors","arrayOfErrors","filter","Boolean","selectErrorText","error","hasErrors","Container","fluid","text","MessageContent","MessageHeader","val","MessageItem","defaultProps","as","MessageList","items","_Component","Message","_getPrototypeOf2","_this","this","args","call","e","onDismiss","key","value","_this$props","compact","floating","header","hidden","info","list","negative","positive","success","visible","warning","dismissIcon","name","onClick","handleDismiss","AboutPage","dispatch","ShowsAction","requestError","isRequesting","requestErrorText","styles","wrapper","LoadingIndicator","isActive","React","connect","ownProps","REQUEST_ERROR","REQUEST_ERROR_FINISHED"],"mappings":"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","file":"static/js/4.058d980a.chunk.js","sourcesContent":["function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n  var length = prev.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n  var lastArgs = null;\n  var lastResult = null; // we reference arguments instead of spreading them for performance reasons\n\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      return memoizedResultFunc.apply(null, params);\n    });\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n\n    selector.recomputations = function () {\n      return recomputations;\n    };\n\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n\n    return selector;\n  };\n}\nexport var createSelector = createSelectorCreator(defaultMemoize);\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from 'reselect';\n\nexport class RequestingSelector {\n  static selectRequesting(requestingState, actionTypes) {\n    return actionTypes.some((actionType) => requestingState[actionType]);\n  }\n}\n\nexport const selectRequesting = createSelector(\n  (state) => state.requesting,\n  (state, actionTypes) => actionTypes,\n  RequestingSelector.selectRequesting\n);\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../Icon';\nimport Image from '../Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;","import { createSelector } from 'reselect';\n\nexport class ErrorSelector {\n  static selectRawErrors(errorState, actionTypes) {\n    return actionTypes.reduce((partialState, actionType) => {\n      if (errorState[actionType]) {\n        partialState[actionType] = errorState[actionType];\n      }\n\n      return partialState;\n    }, {});\n  }\n\n  static selectErrorText(errorState, actionTypes) {\n    const partialErrorState = ErrorSelector.selectRawErrors(errorState, actionTypes);\n\n    const errorList = actionTypes.reduce((errorMessages, actionType) => {\n      if (partialErrorState[actionType]) {\n        const { message, errors } = partialErrorState[actionType];\n        const arrayOfErrors = errors.length ? errors : [message];\n\n        return errorMessages.concat(arrayOfErrors);\n      }\n\n      return errorMessages;\n    }, []);\n\n    return errorList.join(', ');\n  }\n\n  static hasErrors(errorState, actionTypes) {\n    return actionTypes.map((actionType) => errorState[actionType]).filter(Boolean).length > 0;\n  }\n}\n\nexport const selectRawErrors = createSelector(\n  (state) => state.error,\n  (state, actionTypes) => actionTypes,\n  ErrorSelector.selectRawErrors\n);\n\nexport const selectErrorText = createSelector(\n  (state) => state.error,\n  (state, actionTypes) => actionTypes,\n  ErrorSelector.selectErrorText\n);\n\nexport const hasErrors = createSelector(\n  (state) => state.error,\n  (state, actionTypes) => actionTypes,\n  ErrorSelector.hasErrors\n);\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","import styles from './AboutPage.module.scss';\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { selectErrorText } from '../../selectors/error/ErrorSelector';\nimport ShowsAction from '../../stores/shows/ShowsAction';\nimport { selectRequesting } from '../../selectors/requesting/RequestingSelector';\nimport LoadingIndicator from '../components/loading-indicator/LoadingIndicator';\nimport { Header, Message, Container } from 'semantic-ui-react';\n\nconst mapStateToProps = (state, ownProps) => ({\n  isRequesting: selectRequesting(state, [ShowsAction.REQUEST_ERROR]),\n  requestErrorText: selectErrorText(state, [ShowsAction.REQUEST_ERROR_FINISHED]),\n});\n\nclass AboutPage extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(ShowsAction.requestError());\n  }\n\n  render() {\n    const { isRequesting, requestErrorText } = this.props;\n\n    return (\n      <div className={styles.wrapper}>\n        <Header as=\"h2\">About</Header>\n        <LoadingIndicator isActive={isRequesting}>\n          <Container>\n            <p>\n              This page is only to show how to handle API errors on the page. You will also notice a popup indicator with the actual error text. Below\n              we create a custom error message.\n            </p>\n          </Container>\n          {requestErrorText && <Message info={true} header=\"Error\" content=\"Sorry there was an error requesting this content.\" />}\n        </LoadingIndicator>\n      </div>\n    );\n  }\n}\n\nexport { AboutPage as Unconnected };\nexport default connect(mapStateToProps)(AboutPage);\n"],"sourceRoot":""}